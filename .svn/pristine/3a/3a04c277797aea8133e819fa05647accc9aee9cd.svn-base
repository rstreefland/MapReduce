package uk.co.streefland.rhys.mapreduce.output;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import uk.co.streefland.rhys.mapreduce.data.Airport;
import uk.co.streefland.rhys.mapreduce.framework.Pair;

import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.*;

/**
 * Prints out the number of flights from each airport
 */
public class AirportFlightCounter implements Output {

    private final Logger logger = LoggerFactory.getLogger(this.getClass());
    private final List<Pair> airports;

    public AirportFlightCounter(List<Pair> airports) {
        this.airports = airports;
    }

    /**
     * Prints the output to the console
     */
    public void toConsole() {
        List<String> unusedAirports = new ArrayList<>();

        System.out.println("\nFlights from each airport");
        System.out.println("-------------------------");

        for (Pair pair : airports) {

            Airport airport = (Airport) pair.getValue();

            if (airport.getFlightCount() == 0) {
                unusedAirports.add(airport.getAirportName());
            } else {
                System.out.println(airport.getAirportName() + ": " + airport.getFlightCount());
            }
        }

        System.out.println("\nUnused airports");
        System.out.println("---------------");

        for (String airport : unusedAirports) {
            System.out.println(airport);
        }
    }

    public void toTextFile() throws FileNotFoundException {

        String fileName = "airportflightcount.txt";
        logger.info("Writing airport flight count to " + fileName);
        PrintWriter out = new PrintWriter(fileName);

        List<String> unusedAirports = new ArrayList<>();

        out.println("\nFlights from each airport");
        out.println("-------------------------");

        for (Pair pair : airports) {

            Airport airport = (Airport) pair.getValue();

            if (airport.getFlightCount() == 0) {
                unusedAirports.add(airport.getAirportName());
            } else {
                out.println(airport.getAirportName() + ": " + airport.getFlightCount());
            }
        }

        out.println("");
        out.println("Unused airports");
        out.println("---------------");

        for (String airport : unusedAirports) {
            out.println(airport);
        }

        out.close();
    }
}
